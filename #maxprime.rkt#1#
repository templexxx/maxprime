#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 244 244 244 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1008 0 28 3 12 #"#lang racket"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52
(
 #";\345\257\271\346\257\217\351\232\224\345\244"
 #"\232\345\260\221\346\225\260\345\255\227"
 #"\345\207\272\347\216\260\344\270\200\344\270\252\347\264\240"
 #"\346\225\260\345\201\232\345\207\272\347\214\234\346\265\213"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"p_guess"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"logn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"720"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 4 #"5040"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 5 #"40320"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"logn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28
(
 #";\347\254\254\344\270\200\346\254\241\347\214\234\346"
 #"\265\213\346\234\200\345\244\247\347\264\240\346\225\260"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"first_guess"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"p_guess1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"p_guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 4 #" (( "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 1 #" "
0 0 14 3 8 #"p_guess1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(define first_guess1"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 11 #";(lambda(n)"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 37 #"; (let ((no_guess1 (number_guess n)))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #";  (let (( p (inexact->exact (round (/ n no_guess1)))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 14 #";  (- n p)))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19
(
 #";\350\222\231\345\223\245\351\251"
 #"\254\345\210\251\347\256\227\346\263\225"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"sexy_mod"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"a1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 2 #"n0"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")("
0 0 14 3 7 #"at_last"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")("
0 0 14 3 9 #"wait_next"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 2 #"n0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 7 #"at_last"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"n_left"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 2 #"n0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"n01"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 2 #"n0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 3 #"n01"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 6 #"n_left"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 7 #"at_last"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 9 #"wait_next"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"mod_n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 6 #"n_left"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 7 #"at_last"
0 0 24 3 1 #" "
0 0 14 3 9 #"wait_next"
0 0 24 3 2 #") "
0 0 14 3 5 #"mod_n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 9 #"wait_next"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"mod_n"
0 0 24 3 11 #")))))))))))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";Miller Rabin test"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr_test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"n3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sexy_mod"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 30 #"call-with-current-continuation"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 3 #"hop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 5 #"pass?"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 2 #"n3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           (("
0 0 14 3 5 #"even?"
0 0 24 3 1 #" "
0 0 14 3 2 #"n3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 2 #"n3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 2 #"n3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 5 #"mod_t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sexy_mod"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"n3"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"hop"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  (("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"hop"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pass?"
0 0 24 3 1 #" "
0 0 14 3 2 #"n3"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 6 #"mod_t2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sexy_mod"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"n3"
0 0 24 3 1 #" "
0 0 14 3 5 #"mod_n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                (("
0 0 14 3 2 #"or"
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 6 #"mod_t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 6 #"mod_t2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 3 #"hop"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"pass?"
0 0 24 3 1 #" "
0 0 14 3 2 #"n3"
0 0 24 3 11 #" ))))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28
(
 #";\350\247\204\345\256\232\347\264\240\346\200\247\346"
 #"\265\213\350\257\225\347\232\204\345\272\225\346\225\260"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"xmr_test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 3 #"341"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"sexy_mod"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"mr_test"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 17 3 16
#";\345\220\221\344\270\212\345\217\226\347\264\240\346\225\260"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"plus_test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 3 #") ("
0 0 14 3 3 #"pt1"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 3 #"pt1"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 3 #"tp2"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 8 #"xmr_test"
0 0 24 3 1 #" "
0 0 14 3 3 #"tp2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 3 #"tp2"
0 0 24 3 1 #" "
0 0 14 3 3 #"tp2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 3 #"tp2"
0 0 24 3 1 #" "
0 0 14 3 3 #"pt1"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16
#";\345\220\221\344\270\213\345\217\226\347\264\240\346\225\260"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"minus_test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 2 #"f2"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 1 #"("
0 0 14 3 8 #"xmr_test"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 2 #"f2"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"minus_test"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";\344\270\273\347\250\213\345\272\217"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"max_prime"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 8 #"xmr_test"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"fg"
0 0 24 3 2 #" ("
0 0 14 3 11 #"first_guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"minus_test"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"pt1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"plus_test"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 1 #" "
0 0 14 3 3 #"pt1"
0 0 24 3 3 #")) "
0 0 14 3 3 #"pt1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   (("
0 0 14 3 8 #"xmr_test"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 2 #") "
0 0 14 3 2 #"fg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 10 #"minus_test"
0 0 24 3 1 #" "
0 0 14 3 2 #"fg"
0 0 24 3 13 #")))))))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22
(
 #";\346\265\213\351\200\237\357\274\214\345"
 #"\215\225\344\275\215\346\257\253\347\247\222"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 2 #"st"
0 0 24 3 1 #"("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"max_prime"
0 0 24 3 1 #" "
0 0 21 3 19 #"3725123056546413051"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 2 #") "
0 0 14 3 2 #"st"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"runtime2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 2 #"st"
0 0 24 3 1 #"("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"max_prime"
0 0 24 3 1 #" "
0 0 21 3 21 #"147573952589676412928"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 2 #") "
0 0 14 3 2 #"st"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
